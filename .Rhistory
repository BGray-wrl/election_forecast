res<-as.numeric(rbinom(1,1,state_probs$new_pvals[j]))
t_ec_count = t_ec_count + res*state_probs$Electoral_College_Votes[j]
outcome[j,3]=as.numeric(outcome[j,3])+res
outcome[j,2]=as.numeric(outcome[j,2])+1-res
}
ifelse(t_ec_count>=270,outcome[52,3]<-(as.numeric(outcome[52,3])+1),
ifelse(t_ec_count<270,outcome[52,2]<-(as.numeric(outcome[52,2])+1),NULL)
)
}
bidenwins<-rep(0,51)
trumpwins<-rep(0,51)
outcome<-as.data.frame(cbind(state_probs$states,bidenwins,trumpwins))
outcome<-rbind(outcome,c("Election",0,0))
numsim<-1000
for(i in 1:numsim){
# make a random systematic polling/prediction error
# choose a=10 bc it gives me a 95% chance trump takes Wyoming
dep_pct<-rnorm(1,mean=0,sd=0.01)
state_probs$new_pvals<-tanh_transform(as.numeric(state_probs$pvals)+dep_pct,a=10)
t_ec_count<-0
for(j in 1:nrow(state_probs)){
res<-as.numeric(rbinom(1,1,state_probs$new_pvals[j]))
t_ec_count = t_ec_count + res*state_probs$Electoral_College_Votes[j]
outcome[j,3]=as.numeric(outcome[j,3])+res
outcome[j,2]=as.numeric(outcome[j,2])+1-res
}
ifelse(t_ec_count>=270,outcome[52,3]<-(as.numeric(outcome[52,3])+1),
ifelse(t_ec_count<270,outcome[52,2]<-(as.numeric(outcome[52,2])+1),NULL)
)
}
1/7
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = region), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999")) +
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = region), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = region), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
View(outcome)
results$st<-state_probs$Abb_State
View(results)
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
# scale_fill
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
# scale_fill
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Merge with your data
results<-outcome[1:51,]
results$V1=tolower(results$V1)
results$percentage=as.numeric(results$bidenwins)/numsim
results$st<-state_probs$Abb_State
map_data <- us_map %>%
left_join(results, by = c("region" = "V1"))
map_data$bins <- cut(map_data$percentage, breaks = quantile(map_data$percentage, probs = seq(0, 1, 0.2), na.rm = TRUE), include.lowest = TRUE)
# Calculate centroid positions for state labels
label_positions <- map_data %>%
group_by(region) %>%
summarize(long = mean(long, na.rm = TRUE), lat = mean(lat, na.rm = TRUE), .groups = 'drop')  # Ensure grouping is dropped
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
# scale_fill
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
View(map_data)
# Calculate centroid positions for state labels
label_positions <- map_data %>%
group_by(st) %>%
summarize(long = mean(long, na.rm = TRUE), lat = mean(lat, na.rm = TRUE), .groups = 'drop')  # Ensure grouping is dropped
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
# scale_fill
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
# scale_fill
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal()
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC"))
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
map_data$bins <- cut(map_data$percentage, breaks = breaks <- c(0, 0.1, 0.25, 0.45, 0.55, 0.75, 0.9, 1),
right = TRUE,include.lowest = TRUE)
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
names=c("32","32","32","32","32","32","32"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
help("scale_fill_manual")
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = percentage), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
breaks <- c(0, 0.1, 0.25, 0.45, 0.55, 0.75, 0.9, 1))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("32","32","32","32","32","32","32"))+
labs(title = "Map of USA with States Colored by Percentage Bins", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast Outcome", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text( aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast Outcome", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast Outcome", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Calculate centroid positions for state labels
label_positions <- map_data %>%
group_by(st) %>%
summarize(long = mean(long, na.rm = TRUE), lat = mean(lat, na.rm = TRUE), .groups = 'drop')  # Ensure grouping is dropped
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast Outcome", fill = "Percentage") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
election_result<-c(outcome[52,3]/numsim,outcome[52,2]/numsim)
election_result<-c(as.numeric(outcome[52,3])/numsim,as.numeric(outcome[52,2])/numsim)
election_result<-c(as.numeric(outcome[52,3])/numsim,as.numeric(outcome[52,2])/numsim)
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast", fill = "Percentage",subtitle = paste("Biden Odds: ",election_result[1]*100,"%, Trump Odds: ",election_result[2]*100,"%")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast", fill = "Percentage",subtitle = paste("Biden Odds: ",election_result[1]*100,"%, Trump Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
election_result<-c(as.numeric(outcome[52,2])/numsim,as.numeric(outcome[52,3])/numsim)
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast", fill = "Percentage",subtitle = paste("Biden's Odds: ",election_result[1]*100,"%, Trump's Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R","Likely R","Lean R","Toss-Up","Lean D","Likely D","Safe D"))+
labs(title = "Forecast Mock-Up", fill = "Percentage",subtitle = paste("Biden's Odds: ",election_result[1]*100,"%, Trump's Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R (90-100%)","Likely R (75-90%)","Lean R (55-75%)","Toss-Up (45-55%)","Lean D (55-75%)","Likely D (75-90%)","Safe D (90-100%"))+
labs(title = "Forecast Mock-Up", fill = "Percentage",subtitle = paste("Biden's Odds: ",election_result[1]*100,"%, Trump's Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R (90-100%)","Likely R (75-90%)","Lean R (55-75%)","Toss-Up (45-55%)","Lean D (55-75%)","Likely D (75-90%)","Safe D (90-100%)"))+
labs(title = "Forecast Mock-Up", fill = "Percentage",subtitle = paste("Biden's Odds: ",election_result[1]*100,"%, Trump's Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
bidenwins<-rep(0,51)
trumpwins<-rep(0,51)
outcome<-as.data.frame(cbind(state_probs$states,bidenwins,trumpwins))
outcome<-rbind(outcome,c("Election",0,0))
numsim<-10000
for(i in 1:numsim){
# make a random systematic polling/prediction error
# choose a=10 bc it gives me a 95% chance trump takes Wyoming
dep_pct<-rnorm(1,mean=0,sd=0.01)
state_probs$new_pvals<-tanh_transform(as.numeric(state_probs$pvals)+dep_pct,a=10)
t_ec_count<-0
for(j in 1:nrow(state_probs)){
res<-as.numeric(rbinom(1,1,state_probs$new_pvals[j]))
t_ec_count = t_ec_count + res*state_probs$Electoral_College_Votes[j]
outcome[j,3]=as.numeric(outcome[j,3])+res
outcome[j,2]=as.numeric(outcome[j,2])+1-res
}
ifelse(t_ec_count>=270,outcome[52,3]<-(as.numeric(outcome[52,3])+1),
ifelse(t_ec_count<270,outcome[52,2]<-(as.numeric(outcome[52,2])+1),NULL)
)
}
us_map <- map_data("state")
# Merge with your data
results<-outcome[1:51,]
results$V1=tolower(results$V1)
results$percentage=as.numeric(results$bidenwins)/numsim
results$st<-state_probs$Abb_State
election_result<-c(as.numeric(outcome[52,2])/numsim,as.numeric(outcome[52,3])/numsim)
map_data <- us_map %>%
left_join(results, by = c("region" = "V1"))
map_data$bins <- cut(map_data$percentage, breaks = breaks <- c(0, 0.1, 0.25, 0.45, 0.55, 0.75, 0.9, 1),
right = TRUE,include.lowest = TRUE)
# Calculate centroid positions for state labels
label_positions <- map_data %>%
group_by(st) %>%
summarize(long = mean(long, na.rm = TRUE), lat = mean(lat, na.rm = TRUE), .groups = 'drop')  # Ensure grouping is dropped
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R (90-100%)","Likely R (75-90%)","Lean R (55-75%)","Toss-Up (45-55%)","Lean D (55-75%)","Likely D (75-90%)","Safe D (90-100%)"))+
labs(title = "Forecast Mock-Up (nsim = 10000)", fill = "Percentage",subtitle = paste("Biden's Odds: ",election_result[1]*100,"%, Trump's Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
write_csv(outcome,"sim_2_n_10000")
numsim<-10000
bidenwins<-rep(0,51)
trumpwins<-rep(0,51)
outcome<-as.data.frame(cbind(state_probs$states,bidenwins,trumpwins))
outcome<-rbind(outcome,c("Election",0,0))
numsim<-10000
for(i in 1:numsim){
# make a random systematic polling/prediction error
# choose a=10 bc it gives me a 95% chance trump takes Wyoming
dep_pct<-rnorm(1,mean=0,sd=0.01)
state_probs$new_pvals<-tanh_transform(as.numeric(state_probs$pvals)+dep_pct,a=10)
t_ec_count<-0
for(j in 1:nrow(state_probs)){
res<-as.numeric(rbinom(1,1,state_probs$new_pvals[j]))
t_ec_count = t_ec_count + res*state_probs$Electoral_College_Votes[j]
outcome[j,3]=as.numeric(outcome[j,3])+res
outcome[j,2]=as.numeric(outcome[j,2])+1-res
}
ifelse(t_ec_count>=270,outcome[52,3]<-(as.numeric(outcome[52,3])+1),
ifelse(t_ec_count<270,outcome[52,2]<-(as.numeric(outcome[52,2])+1),NULL)
)
}
us_map <- map_data("state")
# Merge with your data
results<-outcome[1:51,]
results$V1=tolower(results$V1)
results$percentage=as.numeric(results$bidenwins)/numsim
results$st<-state_probs$Abb_State
election_result<-c(as.numeric(outcome[52,2])/numsim,as.numeric(outcome[52,3])/numsim)
map_data <- us_map %>%
left_join(results, by = c("region" = "V1"))
map_data$bins <- cut(map_data$percentage, breaks = breaks <- c(0, 0.1, 0.25, 0.45, 0.55, 0.75, 0.9, 1),
right = TRUE,include.lowest = TRUE)
# Calculate centroid positions for state labels
label_positions <- map_data %>%
group_by(st) %>%
summarize(long = mean(long, na.rm = TRUE), lat = mean(lat, na.rm = TRUE), .groups = 'drop')  # Ensure grouping is dropped
# Plot the map
ggplot() +
geom_polygon(data = map_data, aes(x = long, y = lat, group = group, fill = bins), color = "white") +
geom_text(data = label_positions, aes(x = long, y = lat, label = st), size = 3, hjust = 0.5, vjust = 0.5) +
# scale_fill_gradient2(low="#E81B23",mid="white",high="#00AEF3",midpoint = 0.5,
#                      breaks = c(0.2187736,0.9086382),labels = c("Republican","Democrat"))+
scale_fill_manual(values=c("#A03232","#FF5864","#FF8B98","#C9C09B","#89AFFF","#577CCC","#244999"),
labels=c("Safe R (90-100%)","Likely R (75-90%)","Lean R (55-75%)","Toss-Up (45-55%)","Lean D (55-75%)","Likely D (75-90%)","Safe D (90-100%)"))+
labs(title = "Forecast Mock-Up (nsim = 10000)", fill = "Percentage",subtitle = paste("Biden's Odds: ",election_result[1]*100,"%, Trump's Odds: ",election_result[2]*100,"%",sep="")) +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank())
results2<-rbind(results,c("Election",5980,4020,0.598))
results2<-rbind(results,c("Election",5980,4020,0.598,"-"))
View(poll_data)
raw_pvals<-state_probs$pvals
transformed_pvals<-tanh_transform(as.numeric(state_probs$pvals),a=10)
results3<-cbind(results,raw_pvals, transformed_pvals)
results2<-rbind(results3,c("Election",5980,4020,0.598,"-","-","-"))
View(results2)
results3[1]
results3[1]<-state_probs$states
results3[1]
View(results3)
colnames(results3)[1]="states"
results2<-rbind(results3,c("Election",5980,4020,0.598,"-","-","-"))
write_csv(results2,"Forecast Results.csv")
